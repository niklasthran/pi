#include <Servo.h>
#include <avr/pgmspace.h>
#include "test_digits.h"

Servo servo_arr[10];

unsigned int datoi;

void rotation_ease(int res, float alpha, float phi, float vel, int servo_index){

  /*
  res:          100     int       resolution as degree steps
  alpha:        90.0    float     angle range of servo
  phi:          0.0     float     phase shift (0 or PI)
  vel:          50.0    float     velocity of rotation
  servo_index:  1       int       index in array corresponding to servo
  */
  
  float pos = 0;
    
  for (int i = 0; i < res; i++){
    pos = ((cos(phi + PI * (i * (1.0 / res))) + 1) / 2) * alpha;
    servo_arr[servo_index].write(10 + pos);
    Serial.println(pos, 2);
    delay(vel);
  }
}

void setup() {

  Serial.begin(9600);
  while (!Serial);

  for (int j = 0; j < sizeof(servo_arr); j++){
    servo_arr[j].attach(2 + j);
    servo_arr[j].write(10);
    delay(500);
  }

  Serial.println("Servos ready");
  delay(1000);
}

void loop() {

  for (int k = 0; k < (sizeof(test_digits)/sizeof(int)); k++){

      datoi = pgm_read_word_near(test_digits + k);
      
      delay(1000);
      Serial.print("Servo ");
      Serial.print(datoi);
      Serial.println();
    
      delay(1000);
      Serial.println("forward");
      delay(1000);
      // turn forward
      rotation_ease(80, 95.0, PI, 20.0, datoi);
      
      delay(1000);
      Serial.println("backward");
      delay(1000);
      // turn backward
      rotation_ease(80, 95.0, 0.0, 20.0, datoi);
  }
}
